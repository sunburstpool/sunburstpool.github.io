{"version":3,"file":"component---src-templates-service-post-template-js-2dd561f859cbd4b803a5.js","mappings":"wNAYA,SAASA,EAAW,GAA2C,IAAD,QAA1C,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEC,EAAK,KAAEC,GAAM,EAC1D,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAkB1BC,EAAkBP,GAAeK,EAAKG,aAAaR,YACnDS,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAClCO,EAAWL,EAAKG,aAAaG,IAAMP,EACnCQ,EAA0B,QAApB,EAAGP,EAAKG,oBAAY,aAAjB,EAAmBI,OAAOC,KAEzC,OACE,gBAACC,EAAA,EAAM,CACLC,eAAgB,CACdd,QAEFE,MAAOA,EACPa,cAAeP,EAAgB,QAAOA,IAAiB,KACvDP,KAAM,CACJ,CACEW,KAAO,cACPI,QAASV,GAEX,CACEW,SAAW,WACXD,QAASd,GAEX,CACEe,SAAW,iBACXD,QAASV,GAEX,CACEW,SAAW,UACXD,QAAU,WAEZ,CACEJ,KAAO,eACPI,QAAU,WAEZ,CACEC,SAAU,WACVD,QAASP,GAEX,CACEG,KAAM,gBACNI,QAASP,GAEX,CACEG,KAAO,kBACPI,QAASL,GAAW,IAEtB,CACEC,KAAO,gBACPI,QAASd,GAEX,CACEU,KAAO,sBACPI,QAASV,IAEXY,OAAOjB,IAET,0BAAQkB,KAAK,uBAAwB,iFAG5BX,oBACDJ,EAAKG,aAAaG,uQASjBR,+BAENO,oCAEaV,gEAGLS,oBAOjB,CAEAV,EAAWsB,aAAe,CACxBpB,KAAO,KACPC,KAAM,GACNF,YAAc,IAUhB,QCxDA,MAjE4B,IAAyB,IAAD,MAAvB,KAAEsB,EAAI,SAAEC,GAAU,EAC7C,MAAMC,EAAOF,EAAKG,eACZC,GAAkC,QAAtB,EAAAJ,EAAKjB,KAAKG,oBAAY,aAAtB,EAAwBL,QAAU,QAC9CwB,GAAQC,EAAAA,EAAAA,GAASJ,EAAKK,YAAYC,aACxC,OACE,gBAAC,IAAM,CAACP,SAAUA,EAAUpB,MAAOuB,GACjC,gBAAC,EAAU,CACTvB,MAAOqB,EAAKK,YAAY1B,MACxBH,YAAawB,EAAKK,YAAY7B,aAAewB,EAAKO,QAClD3B,KAAMoB,EAAKK,YAAYC,YAAYE,gBAAgBC,gBAAgBC,OAAOC,SAASC,MAErF,2BACEC,UAAU,2CACVC,WAAS,EACTC,SAAS,6BAET,uBAAKF,UAAU,aACb,gBAAC,EAAAG,EAAW,CACVC,SAAS,QACTJ,UAAU,qEACVV,MAAOA,EACPe,QAAS,GACTC,MAAO,IACPC,YAAY,UACZC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,QAEN,uBAAKT,UAAU,yBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,wBACb,8BACE,sBAAIA,UAAU,wBACZ,wBAAMA,UAAU,yBACbb,EAAKK,YAAYkB,UAEpB,wBAAMV,UAAU,wBAAwBW,SAAS,QAC9CxB,EAAKK,YAAY1B,SAIxB,2BACE8C,wBAAyB,CAAEC,OAAQ1B,EAAK2B,MACxCH,SAAS,gBAEX,uBAAKX,UAAU,2DACa,gBAA1Bb,EAAKK,YAAYT,MACjB,qBAAGiB,UAAU,yBAAyBe,KAAM,YAAc5B,EAAKK,YAAYwB,YAAW,iBAItF,qBAAGhB,UAAU,8BAA8Be,KAAK,YAAU,0BAUjE,C","sources":["webpack://sunburst-pools/./src/components/seoProduct.js","webpack://sunburst-pools/./src/templates/service-post-template.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SeoProduct({ description, lang, meta, title, logo }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            url\r\n            description\r\n            author {\r\n              name\r\n              summary\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n  const metaLogo = site.siteMetadata.url + logo\r\n  const author = site.siteMetadata?.author.name\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `article`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          property: 'og:image',\r\n          content: metaLogo,\r\n        },\r\n        {\r\n          name: 'twitter:image',\r\n          content: metaLogo,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: author || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    >\r\n      <script type=\"application/ld+json\">{`\r\n    \"@context\": \"http://schema.org\",\r\n    \"@type\": \"WebSite\",\r\n    \"name\": \"${defaultTitle}\",\r\n    \"url\": \"${site.siteMetadata.url}\",\r\n    \"sameAs\": [\r\n      \"https://www.yellowpages.com/etna-oh/mip/sunburst-pools-19572024\",\r\n      \"https://www.facebook.com/Sunburst-Pools-166603570032111/\"\r\n    ]\r\n  },\r\n  {\r\n    \"@context\": \"https://schema.org/\",\r\n    \"@type\": \"Product\",\r\n    \"name\": \"${title}\",\r\n    \"image\": [\r\n      \"${metaLogo}\"\r\n     ],\r\n    \"description\": \"${description}\",\r\n    \"brand\": {\r\n      \"@type\": \"Brand\",\r\n      \"name\": \"${defaultTitle}\"\r\n    }\r\n  }\r\n`}</script>\r\n  </Helmet>\r\n    \r\n  )\r\n}\r\n\r\nSeoProduct.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeoProduct.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SeoProduct\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SeoProduct from \"../components/seoProduct\"\r\n\r\nconst ServicePostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const image = getImage(post.frontmatter.headerImage)\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SeoProduct\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n        logo={post.frontmatter.headerImage.childImageSharp.gatsbyImageData.images.fallback.src}\r\n      />\r\n      <article\r\n        className=\"page-section about-heading services-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Product\"\r\n      >\r\n        <div className=\"container\">\r\n          <GatsbyImage\r\n            itemProp=\"image\"\r\n            className=\"img-fluid rounded about-heading-img mb-3 mb-lg-0 custom-box-shadow\"\r\n            image={image}\r\n            quality={95}\r\n            width={1000}\r\n            placeholder=\"blurred\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n            alt=\"sun\"\r\n          />\r\n          <div className=\"about-heading-content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-9 col-lg-10 mx-auto\">\r\n                <div className=\"bg-faded rounded p-5\">\r\n                  <header>\r\n                    <h1 className=\"section-heading mb-4\">\r\n                      <span className=\"section-heading-upper\">\r\n                        {post.frontmatter.subtitle}\r\n                      </span>\r\n                      <span className=\"section-heading-lower\" itemprop=\"name\">\r\n                        {post.frontmatter.title}\r\n                      </span>\r\n                    </h1>\r\n                  </header>\r\n                  <section\r\n                    dangerouslySetInnerHTML={{ __html: post.html }}\r\n                    itemprop=\"description\"\r\n                  />\r\n                  <div className=\"intro-button d-flex justify-content-end align-items-end\">\r\n                   {post.frontmatter.type === \"poolCatalog\" && \r\n                    <a className=\"btn btn-primary btn-xl\" href={\"/gallery#\" + post.frontmatter.galleryUrl}>\r\n                      Visit Gallery\r\n                    </a>\r\n                    }\r\n                    <a className=\"btn btn-primary btn-xl mx-2\" href=\"../store\">\r\n                      Visit Us Today!\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ServicePostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query ServicePostBySlug($id: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        subtitle\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        type\r\n        galleryUrl\r\n        headerImage {\r\n          childImageSharp {\r\n            gatsbyImageData\r\n          }\r\n        }\r\n        url\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["SeoProduct","description","lang","meta","title","logo","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","metaLogo","url","author","name","Helmet","htmlAttributes","titleTemplate","content","property","concat","type","defaultProps","data","location","post","markdownRemark","siteTitle","image","getImage","frontmatter","headerImage","excerpt","childImageSharp","gatsbyImageData","images","fallback","src","className","itemScope","itemType","G","itemProp","quality","width","placeholder","formats","alt","subtitle","itemprop","dangerouslySetInnerHTML","__html","html","href","galleryUrl"],"sourceRoot":""}