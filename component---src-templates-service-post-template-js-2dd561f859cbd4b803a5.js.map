{"version":3,"file":"component---src-templates-service-post-template-js-2dd561f859cbd4b803a5.js","mappings":"wNAYA,SAASA,EAAW,GAA2C,IAAD,QAA1C,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEC,EAAK,KAAEC,GAAM,EAC1D,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAkB1BC,EAAkBP,GAAeK,EAAKG,aAAaR,YACnDS,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAClCO,EAAWL,EAAKG,aAAaG,IAAMP,EACnCQ,EAA0B,QAApB,EAAGP,EAAKG,oBAAY,aAAjB,EAAmBI,OAAOC,KAEzC,OACE,gBAACC,EAAA,EAAM,CACLC,eAAgB,CACdd,QAEFE,MAAOA,EACPa,cAAeP,EAAgB,QAAOA,IAAiB,KACvDP,KAAM,CACJ,CACEW,KAAO,cACPI,QAASV,GAEX,CACEW,SAAW,WACXD,QAASd,GAEX,CACEe,SAAW,iBACXD,QAASV,GAEX,CACEW,SAAW,UACXD,QAAU,WAEZ,CACEJ,KAAO,eACPI,QAAU,WAEZ,CACEC,SAAU,WACVD,QAASP,GAEX,CACEG,KAAM,gBACNI,QAASP,GAEX,CACEG,KAAO,kBACPI,QAASL,GAAW,IAEtB,CACEC,KAAO,gBACPI,QAASd,GAEX,CACEU,KAAO,sBACPI,QAASV,IAEXY,OAAOjB,IAET,0BAAQkB,KAAK,uBAAwB,iFAG5BX,oBACDJ,EAAKG,aAAaG,uQASjBR,+BAENO,oCAEaV,gEAGLS,oBAOjB,CAEAV,EAAWsB,aAAe,CACxBpB,KAAO,KACPC,KAAM,GACNF,YAAc,IAUhB,QCxDA,MAjE4B,IAAyB,IAAD,MAAvB,KAAEsB,EAAI,SAAEC,GAAU,EAC7C,MAAMC,EAAOF,EAAKG,eACZC,GAAkC,QAAtB,EAAAJ,EAAKjB,KAAKG,oBAAY,aAAtB,EAAwBL,QAAU,QAC9CwB,GAAQC,EAAAA,EAAAA,GAASJ,EAAKK,YAAYC,aACxC,OACE,gBAAC,IAAM,CAACP,SAAUA,EAAUpB,MAAOuB,GACjC,gBAAC,EAAU,CACTvB,MAAOqB,EAAKK,YAAY1B,MACxBH,YAAawB,EAAKK,YAAY7B,aAAewB,EAAKO,QAClD3B,KAAMoB,EAAKK,YAAYC,YAAYE,gBAAgBC,gBAAgBC,OAAOC,SAASC,MAErF,2BACEC,UAAU,2CACVC,WAAS,EACTC,SAAS,6BAET,uBAAKF,UAAU,aACb,gBAAC,EAAAG,EAAW,CACVC,SAAS,QACTJ,UAAU,qEACVV,MAAOA,EACPe,QAAS,GACTC,MAAO,IACPC,YAAY,UACZC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,QAEN,uBAAKT,UAAU,yBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,wBACb,8BACE,sBAAIA,UAAU,wBACZ,wBAAMA,UAAU,yBACbb,EAAKK,YAAYkB,UAEpB,wBAAMV,UAAU,wBAAwBW,SAAS,QAC9CxB,EAAKK,YAAY1B,SAIxB,2BACE8C,wBAAyB,CAAEC,OAAQ1B,EAAK2B,MACxCH,SAAS,gBAEX,uBAAKX,UAAU,2DACa,gBAA1Bb,EAAKK,YAAYT,MACjB,qBAAGiB,UAAU,yBAAyBe,KAAM,YAAc5B,EAAKK,YAAYwB,YAAW,iBAItF,qBAAGhB,UAAU,8BAA8Be,KAAK,YAAU,0BAUjE,C","sources":["webpack://sunburst-pools/./src/components/seoProduct.js","webpack://sunburst-pools/./src/templates/service-post-template.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SeoProduct({ description, lang, meta, title, logo }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            url\n            description\n            author {\n              name\n              summary\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const metaLogo = site.siteMetadata.url + logo\n  const author = site.siteMetadata?.author.name\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `article`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          property: 'og:image',\n          content: metaLogo,\n        },\n        {\n          name: 'twitter:image',\n          content: metaLogo,\n        },\n        {\n          name: `twitter:creator`,\n          content: author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      <script type=\"application/ld+json\">{`\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"WebSite\",\n    \"name\": \"${defaultTitle}\",\n    \"url\": \"${site.siteMetadata.url}\",\n    \"sameAs\": [\n      \"https://www.yellowpages.com/etna-oh/mip/sunburst-pools-19572024\",\n      \"https://www.facebook.com/Sunburst-Pools-166603570032111/\"\n    ]\n  },\n  {\n    \"@context\": \"https://schema.org/\",\n    \"@type\": \"Product\",\n    \"name\": \"${title}\",\n    \"image\": [\n      \"${metaLogo}\"\n     ],\n    \"description\": \"${description}\",\n    \"brand\": {\n      \"@type\": \"Brand\",\n      \"name\": \"${defaultTitle}\"\n    }\n  }\n`}</script>\n  </Helmet>\n    \n  )\n}\n\nSeoProduct.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeoProduct.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SeoProduct\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport SeoProduct from \"../components/seoProduct\"\n\nconst ServicePostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const image = getImage(post.frontmatter.headerImage)\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SeoProduct\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        logo={post.frontmatter.headerImage.childImageSharp.gatsbyImageData.images.fallback.src}\n      />\n      <article\n        className=\"page-section about-heading services-post\"\n        itemScope\n        itemType=\"http://schema.org/Product\"\n      >\n        <div className=\"container\">\n          <GatsbyImage\n            itemProp=\"image\"\n            className=\"img-fluid rounded about-heading-img mb-3 mb-lg-0 custom-box-shadow\"\n            image={image}\n            quality={95}\n            width={1000}\n            placeholder=\"blurred\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"sun\"\n          />\n          <div className=\"about-heading-content\">\n            <div className=\"row\">\n              <div className=\"col-xl-9 col-lg-10 mx-auto\">\n                <div className=\"bg-faded rounded p-5\">\n                  <header>\n                    <h1 className=\"section-heading mb-4\">\n                      <span className=\"section-heading-upper\">\n                        {post.frontmatter.subtitle}\n                      </span>\n                      <span className=\"section-heading-lower\" itemprop=\"name\">\n                        {post.frontmatter.title}\n                      </span>\n                    </h1>\n                  </header>\n                  <section\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                    itemprop=\"description\"\n                  />\n                  <div className=\"intro-button d-flex justify-content-end align-items-end\">\n                   {post.frontmatter.type === \"poolCatalog\" && \n                    <a className=\"btn btn-primary btn-xl\" href={\"/gallery#\" + post.frontmatter.galleryUrl}>\n                      Visit Gallery\n                    </a>\n                    }\n                    <a className=\"btn btn-primary btn-xl mx-2\" href=\"../store\">\n                      Visit Us Today!\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport default ServicePostTemplate\n\nexport const pageQuery = graphql`\n  query ServicePostBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        subtitle\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        type\n        galleryUrl\n        headerImage {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        url\n      }\n    }\n  }\n`\n"],"names":["SeoProduct","description","lang","meta","title","logo","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","metaLogo","url","author","name","Helmet","htmlAttributes","titleTemplate","content","property","concat","type","defaultProps","data","location","post","markdownRemark","siteTitle","image","getImage","frontmatter","headerImage","excerpt","childImageSharp","gatsbyImageData","images","fallback","src","className","itemScope","itemType","G","itemProp","quality","width","placeholder","formats","alt","subtitle","itemprop","dangerouslySetInnerHTML","__html","html","href","galleryUrl"],"sourceRoot":""}