{"version":3,"file":"component---src-pages-contact-us-js-4e388cad308bf367071f.js","mappings":"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","sources":["webpack://sunburst-pools/./src/images/about.jpg","webpack://sunburst-pools/./src/components/seoBusiness.js","webpack://sunburst-pools/./src/pages/contact-us.js","webpack://sunburst-pools/./src/images/sunburst-logo.png"],"sourcesContent":["export default __webpack_public_path__ + \"static/about-8500ea1afd4c86101f471fd5859475af.jpg\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport SiteImage from \"../images/sunburst-logo.png\"\nimport StoreImage from \"../images/about.jpg\"\n\nfunction SeoBusiness({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            keywords\n            description\n            url\n            metaDescription\n            author {\n              name\n              summary\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.metaDescription\n  const defaultTitle = site.siteMetadata?.title\n  const keywords = site.siteMetadata?.keywords\n  const logo = site.siteMetadata.url + SiteImage\n  const storeImage = site.siteMetadata.url + StoreImage\n  return (\n  <Helmet\n  htmlAttributes={{\n    lang,\n  }}\n  title={title || defaultTitle}\n  titleTemplate={title ? `${defaultTitle} | %s` : `${defaultTitle}`}\n  meta={[\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      name: `keywords`,\n      content: keywords\n    },\n    {\n      property: `og:title`,\n      content: title || defaultTitle,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `twitter:card`,\n      content: `summary`,\n    },\n    {\n      name: `twitter:creator`,\n      content: site.siteMetadata?.author.name || ``,\n    },\n    {\n      name: `twitter:title`,\n      content: title || defaultTitle,\n    },\n    {\n      property: 'og:image',\n      content: logo,\n    },\n    {\n      name: 'twitter:image',\n      content: logo,\n    },\n    {\n      name: `twitter:description`,\n      content: metaDescription,\n    },\n  ].concat(meta)}\n>\n  <script type=\"application/ld+json\">{`\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"WebSite\",\n    \"name\": \"${defaultTitle}\",\n    \"url\": \"${site.siteMetadata.url}\",\n    \"sameAs\": [\n      \"https://www.yellowpages.com/etna-oh/mip/sunburst-pools-19572024\",\n      \"https://www.facebook.com/Sunburst-Pools-166603570032111/\"\n    ]\n  },\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": [\"ProfessionalService\", \"Store\"],\n    \"name\": \"${defaultTitle}\",\n    \"legalName\": \"${defaultTitle}\",\n    \"url\": \"${site.siteMetadata.url}\",\n    \"logo\": \"${logo}\",\n    \"image\": \"${storeImage}\",\n    \"description\": \"Swimming pool contractor, wood pool builder, pool service company; Services include - build and service swimming pool, swimming pools, wood pools, above ground pools, in ground pools, pool, pool repair, pool service, pool parts, new pool, pool accessories, wood pool, on ground pool, pool deck, above ground pool, buy above ground pool online, pool for sale, swimming pool for sale, Pool Repair, Pool supplies, pool maintenance, pool sales\",\n    \"founders\": [\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Joe Wagner\"\n      }\n    ],\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"12981 National Rd SW\",\n      \"addressLocality\": \"Etna\",\n      \"addressRegion\": \"OH\",\n      \"postalCode\": \"43062\",\n      \"addressCountry\": \"USA\"\n    },\n    \"geo\": {\n      \"@type\": \"GeoCoordinates\",\n      \"latitude\": \"39.956242\",\n      \"longitude\": \"-82.729057\"\n    },\n    \"hasMap\": \"https://goo.gl/maps/dA4aH3JjTjdrXrAj6\",\n    \"openingHours\": \"Mo 10:00-19:00 Tu 10:00-19:00 We 10:00-19:00 Th 10:00-19:00 Fr 10:00-19:00 Sa 10:00-19:00 Su 11:00-16:00\",\n    \"telephone\": \"(740) 927-9686\",\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"contactType\": \"customer support\",\n      \"telephone\": \"+1-740-927-9686\",\n      \"availableLanguage\" : [\"English\"],\n      \"areaServed\" : \"US\",\n      \"email\": \"info@sunburstpool.com\"\n    },\n    \"sameAs\": [\n      \"https://www.yellowpages.com/etna-oh/mip/sunburst-pools-19572024\",\n      \"https://www.facebook.com/Sunburst-Pools-166603570032111/\"\n    ]\n  }\n`}</script>\n  </Helmet>\n  )\n}\n\nSeoBusiness.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeoBusiness.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n}\n\nexport default SeoBusiness\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SeoBusiness from \"../components/seoBusiness\";\n\nconst ContactUs = () => {\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [nameError, setNameError] = React.useState(false);\n  const [emailError, setEmailError] = React.useState(false);\n  const [messageError, setMessageError] = React.useState(false);\n  const [showModal, setShowModal] = React.useState(false);\n  const [submitError, setSubmitError] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const successMessage =\n    \"Your message was received. We will respond to you shortly.\";\n  const failureMessage = (\n    <div>\n      There was an error in the submission. Please reach us directly.{\" \"}\n      <Link className=\"text-danger\" to=\"/store\">\n        Store Hours\n      </Link>\n    </div>\n  );\n  const [submissionMessage, setSubmissionMessage] =\n    React.useState(successMessage);\n\n  const FORMSPREE_POST_URL = \"https://formspree.io/f/mqkwoyrr\";\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const showSuccessToast = () => {\n    setIsLoading(false);\n    setSubmissionMessage(successMessage);\n    setSubmitError(false);\n    setShowModal(true);\n  };\n\n  const showErrorToast = () => {\n    setIsLoading(false);\n    setSubmissionMessage(failureMessage);\n    setSubmitError(true);\n    setShowModal(true);\n  };\n\n  const isFormValid = () => {\n    return !nameError && !emailError && !messageError;\n  };\n\n  const isFormEmpty = () => {\n    return !(!!name && !!email && !!message);\n  };\n\n  const runFormValidation = () => {\n    setNameError(name.trim() ? false : true);\n    setEmailError(\n      email.trim() && emailRegex.test(String(email.trim()).toLowerCase())\n        ? false\n        : true\n    );\n    setMessageError(message.trim() ? false : true);\n  };\n\n  const handleCloseModal = () => {\n    if (!submitError) {\n      resetForm();\n    }\n    setShowModal(false);\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNameError(false);\n    setEmail(\"\");\n    setEmailError(false);\n    setPhone(\"\");\n    setMessage(\"\");\n    setMessageError(false);\n    setSubmitError(false);\n  };\n\n  const submitForm = (event) => {\n    setIsLoading(true);\n    const formData = new FormData(event.target);\n    formData.append(\"_subject\", \"Submission from website contact form!\");\n    const data = new URLSearchParams();\n    for (const pair of formData) {\n      data.append(pair[0], pair[1]);\n    }\n    fetch(FORMSPREE_POST_URL, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n      .catch((e) => {\n        showErrorToast();\n      })\n      .then((response) => {\n        if (response.ok) {\n          showSuccessToast();\n        } else {\n          showErrorToast();\n        }\n      });\n  };\n\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n    if (isFormEmpty()) {\n      runFormValidation();\n    } else if (isFormValid()) {\n      submitForm(event);\n    }\n  };\n\n  return (\n    <Layout>\n      <SeoBusiness title=\"Contact Us\" />\n      <section className=\"page-section cta\">\n        <div\n          className=\"modal\"\n          tabIndex=\"-1\"\n          style={{ display: showModal ? \"block\" : \"none\" }}\n          data-bs-backdrop=\"static\"\n          aria-labelledby=\"staticBackdropLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" >\n            <div className=\"modal-content\">\n              <div\n                class={\n                  submitError\n                    ? \"modal-header text-white bg-danger\"\n                    : \"modal-header text-white bg-success\"\n                }\n              >\n                <h5 class=\"modal-title\" id=\"staticBackdropLabel\">\n                  {submitError ? \"Message failed\" : \"Message sent\"}\n                </h5>\n                <button\n                  type=\"button\"\n                  class=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={() => setShowModal(false)}\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <p>{\"Hello \" + name + \",\"}</p>\n                <p>{submissionMessage}</p>\n                <p>Thank you</p>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-primary btn-lg\"\n                  data-bs-dismiss=\"modal\"\n                  onClick={handleCloseModal}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xl-9 mx-auto\">\n              <div className=\"cta-inner bg-faded rounded\">\n                <h2 className=\"section-heading mb-5 text-center\">\n                  <span className=\"section-heading-upper\">Send us a note</span>\n                  <span className=\"section-heading-lower\">Contact Us</span>\n                </h2>\n                <form\n                  id=\"contact-form\"\n                  noValidate\n                  onSubmit={handleSubmitForm}\n                  onChange={runFormValidation}\n                >\n                  <div className=\"mb-3 form-group\">\n                    <label htmlFor=\"name\" className=\"form-label\">\n                      Name *\n                    </label>\n                    <input\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      onChange={(event) => setName(event.target.value)}\n                      value={name}\n                      className={\n                        \"form-control\" + (nameError ? \" is-invalid\" : \"\")\n                      }\n                      placeholder=\"Your name\"\n                    />\n                    <div className=\"invalid-feedback\">A name is required</div>\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"email\" className=\"form-label\">\n                      Email *\n                    </label>\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"_replyTo\"\n                      value={email}\n                      onChange={(event) => setEmail(event.target.value)}\n                      placeholder=\"Your email\"\n                      className={\n                        \"form-control\" + (emailError ? \" is-invalid\" : \"\")\n                      }\n                    />\n                    <div className=\"invalid-feedback\">\n                      A valid email is required\n                    </div>\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"email\" className=\"form-label\">\n                      Phone\n                    </label>\n                    <input\n                      type=\"phone\"\n                      id=\"phone\"\n                      name=\"telephone\"\n                      value={phone}\n                      placeholder=\"Your phone #\"\n                      className=\"form-control\"\n                      onChange={(event) => setPhone(event.target.value)}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"message\" className=\"form-label\">\n                      Message *\n                    </label>\n                    <textarea\n                      rows=\"4\"\n                      id=\"message\"\n                      name=\"message\"\n                      value={message}\n                      placeholder=\"Your message to us\"\n                      className={\n                        \"form-control\" + (messageError ? \" is-invalid\" : \"\")\n                      }\n                      onChange={(event) => setMessage(event.target.value)}\n                    />\n                    <div className=\"invalid-feedback\">\n                      A message is required\n                    </div>\n                  </div>\n                  <div className=\"intro-button mx-auto d-flex justify-content-end\">\n                  \n                    <button\n                      type=\"submit\"\n                      // style={{ fontSize: \"1em\" }}\n                      className=\"btn btn-lg btn-primary mb-3 d-flex align-items-center\"\n                    >\n                      { isLoading ? \n                      <div class=\"spinner-border\" style={{color: \"#f6e1c5\"}} role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                      </div>\n                      :\n                      <>\n                      <span className=\"me-1\">Send</span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"currentColor\"\n                        className=\"bi bi-envelope-fill\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z\" />\n                      </svg>\n                      </>\n                    }\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default ContactUs;\n","export default __webpack_public_path__ + \"static/sunburst-logo-62802bb5cf7f8a1b4b7a567ab8552ca7.png\";"],"names":["SeoBusiness","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","keywords","logo","url","SiteImage","storeImage","StoreImage","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","type","defaultProps","setName","React","email","setEmail","phone","setPhone","message","setMessage","nameError","setNameError","emailError","setEmailError","messageError","setMessageError","showModal","setShowModal","submitError","setSubmitError","isLoading","setIsLoading","successMessage","failureMessage","Link","className","to","submissionMessage","setSubmissionMessage","emailRegex","showErrorToast","runFormValidation","trim","test","String","toLowerCase","resetForm","submitForm","event","formData","FormData","target","append","data","URLSearchParams","pair","fetch","method","body","headers","Accept","catch","e","then","response","ok","tabIndex","style","display","class","id","onClick","noValidate","onSubmit","preventDefault","onChange","htmlFor","value","placeholder","rows","color","role","xmlns","width","height","fill","viewBox","d"],"sourceRoot":""}